<?xml version="1.0"?>
<launch>

    <!-- Arguments -->
    <arg name="multimaster" default="$(optenv ROBOT_MULTIMASTER false)"/>
    <arg name="simulation" default="false"/>
    <arg name="robot_id" default="husky"/>  <!-- Added new -->
    <arg name="robot_namespace" value="$(arg robot_id)" />
    <arg name="ur5_enabled" default="false"/>  <!-- Added new -->

    <arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

    <arg name="laser_enabled" default="$(optenv HUSKY_LMS1XX_ENABLED false)"/>
    <arg name="kinect_enabled" default="$(optenv HUSKY_KINECT_ENABLED false)"/>
    <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>

    <!-- Load robot description -->
    <include file="$(find husky_description)/launch/description.launch" >
        <arg name="laser_enabled" default="$(arg laser_enabled)"/>
        <arg name="kinect_enabled" default="$(arg kinect_enabled)"/>
        <arg name="urdf_extras" default="$(arg urdf_extras)"/>
        <arg name="ur5_enabled" default="$(arg ur5_enabled)"/>  <!-- Added new -->
    </include>

    <!-- Load controller configuration -->
    <rosparam command="load" file="$(find husky_control)/config/control.yaml" />

    <!-- Spawn controllers -->
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller"/>

    <!-- Start Ground_Truth for localization -->
    <node pkg="husky_ur5_send_gazebo_pos" type="get_send_gazebo_pos" name="get_send_gazebo_pos"/>

    <!-- TODO: Check what this does.... -->
    <!-- Publish command velocity messages arising from markers usage - can be eventually replaced if other type of localization is used

    <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"-->
        <!--remap from="/twist_marker_server/feedback" to="$(arg robot_namespace)/twist_marker_server/feedback"/-->
        <!--remap from="/twist_marker_server/update" to="$(arg robot_namespace)/twist_marker_server/update"/-->
        <!--remap from="/twist_marker_server/cmd_vel" to="$(arg robot_namespace)/twist_marker_server/cmd_vel"/-->
        <!--remap from="/twist_marker_server/cmd_vel" to="husky_velocity_controller/cmd_vel"/-->
    <!--/node-->

    <!-- TODO: Check what this does... -->
    <!--This package publishes the state of the robot to tf -->

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <!-- <remap from="/joint_states" to="$(arg robot_namespace)/joint_states"/> -->
  </node>


    <!-- TODO: Check what this does... -->
    <!-- Not needed for now - It should be used only if there are more than a single source to move the robot (with a geometry_msgs::Twist message)  -->

    <!--node pkg="twist_mux" type="twist_mux" name="$(arg robot_namespace)_twist_mux" >
        <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
        <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
    </node-->

    <!-- Override the default control parameters, see config/empty.yaml for default. -->
    <rosparam command="load" file="$(arg config_extras)" />

</launch>
